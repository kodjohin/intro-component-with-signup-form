{"version":3,"sources":["components/validation/validate.ts","images/icon-error.svg","components/SignupForm.tsx","App.tsx","index.tsx"],"names":["validationSchema","Yup","firstName","max","required","lastName","email","password","min","StyledForm","styled","div","SignupForm","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","inputStyle","param","backgroundImage","ErrorIcon","backgroundRepeat","backgroundPosition","right","border","action","handleSubmit","type","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","style","touched","errors","className","StyledApp","StyledTexts","StyledTryButton","button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA2CaA,EAAmBC,IAAW,CAC1CC,UAAWD,MACTE,IAAI,GAAI,iCACRC,SAAS,0BACXC,SAAUJ,MACRE,IAAI,GAAI,iCACRC,SAAS,gCACXE,MAAOL,MAAaK,MAAM,yBAAyBF,SAAS,oBAC5DG,SAAUN,MACRG,SAAS,cACTI,IAAI,EAAG,wDCrDK,MAA0B,uC,OCMnCC,EAAaC,IAAOC,IAAV,8gDAgKDC,EAzFQ,WACtB,IAAMC,EAASC,YAAU,CACxBC,cAAe,CACdb,UAAW,GACXG,SAAU,GACVC,MAAO,GACPC,SAAU,IAEXP,mBACAgB,SAAU,SAACC,GACVC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,OAI5BI,EAAa,SAACC,GAAD,OAAsCA,EACvD,CACMC,gBAAgB,QAAD,OAAUC,EAAV,MACfC,iBAAkB,YAClBC,mBAAoB,sBACpBC,MAAO,IACPC,OAAQ,wBAEd,IAEL,OACC,eAACnB,EAAD,WACC,uBAAMoB,OAAO,GAAGb,SAAUH,EAAOiB,aAAjC,UACC,uBACCC,KAAK,OACLC,GAAG,YACHC,KAAK,YACLC,YAAY,aACZC,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAOI,OAAOf,UACNsC,MAAOnB,EAAWR,EAAO4B,QAAQvC,WAAaW,EAAO6B,OAAOxC,aAE3EW,EAAO4B,QAAQvC,WAAaW,EAAO6B,OAAOxC,UAC1C,qBAAKyC,UAAU,QAAf,SAAwB9B,EAAO6B,OAAOxC,YACnC,KACJ,uBACC6B,KAAK,OACLC,GAAG,WACHC,KAAK,WACLC,YAAY,YACZC,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAOI,OAAOZ,SACrBmC,MAAOnB,EAAWR,EAAO4B,QAAQpC,UAAYQ,EAAO6B,OAAOrC,YAE3DQ,EAAO4B,QAAQpC,UAAYQ,EAAO6B,OAAOrC,SACzC,qBAAKsC,UAAU,QAAf,SAAwB9B,EAAO6B,OAAOrC,WACnC,KACJ,uBACC0B,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,YAAY,gBACZC,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAOI,OAAOX,MACNkC,MAAOnB,EAAWR,EAAO4B,QAAQnC,OAASO,EAAO6B,OAAOpC,SAEvEO,EAAO4B,QAAQnC,OAASO,EAAO6B,OAAOpC,MACtC,qBAAKqC,UAAU,QAAf,SAAwB9B,EAAO6B,OAAOpC,QACnC,KACJ,uBACCyB,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,YAAY,WACZC,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAOI,OAAOV,SACNiC,MAAOnB,EAAWR,EAAO4B,QAAQlC,UAAYM,EAAO6B,OAAOnC,YAE1EM,EAAO4B,QAAQlC,UAAYM,EAAO6B,OAAOnC,SACzC,qBAAKoC,UAAU,QAAf,SAAwB9B,EAAO6B,OAAOnC,WACnC,KACJ,wBAAQwB,KAAK,SAAb,uCAED,oFACiD,IAChD,6DC3JEa,EAAYlC,IAAOC,IAAV,sNAWTkC,EAAcnC,IAAOC,IAAV,iLAWXmC,EAAkBpC,IAAOqC,OAAV,yVAsCNC,EApBC,WACf,OACC,eAACJ,EAAD,WACC,eAACC,EAAD,WACC,kEACA,2LAMD,eAACC,EAAD,WACC,sDADD,SACsC,uBADtC,wBAIA,cAAC,EAAD,QCxDHG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6d402e54.chunk.js","sourcesContent":["import * as Yup from \"yup\";\n// A custom validation function. This must return an object\n// which keys are symmetrical to our values/initialValues\ninterface UserInput {\n\tfirstName: string;\n\tlastName: string;\n\temail: string;\n\tpassword: string;\n}\ninterface Errors {\n\tfirstName?: string;\n\tlastName?: string;\n\temail?: string;\n\tpassword?: string;\n}\nexport const validate = (values: UserInput) => {\n\tconst errors: Errors = {};\n\tif (!values.firstName) {\n\t\terrors.firstName = \"Required\";\n\t} else if (values.firstName.length > 15) {\n\t\terrors.firstName = \"Must be 15 characters or less\";\n\t}\n\n\tif (!values.lastName) {\n\t\terrors.lastName = \"Required\";\n\t} else if (values.lastName.length > 20) {\n\t\terrors.lastName = \"Must be 20 characters or less\";\n\t}\n\n\tif (!values.email) {\n\t\terrors.email = \"Required\";\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\t\terrors.email = \"Invalid email address\";\n\t}\n\tif (!values.password) {\n\t\terrors.password = \"Required\";\n\t} else if (values.password.length < 6) {\n\t\terrors.password = \"Must be 6 characters or more\";\n\t}\n\n\treturn errors;\n};\n\nexport const validationSchema = Yup.object({\n\tfirstName: Yup.string()\n\t\t.max(15, \"Must be 15 characters or less\")\n\t\t.required(\"Don't you have a name?\"),\n\tlastName: Yup.string()\n\t\t.max(20, \"Must be 20 characters or less\")\n\t\t.required(\"Yo mama did give you a name!\"),\n\temail: Yup.string().email(\"Invalid email address\").required(\"no@no.com works!\"),\n\tpassword: Yup.string()\n\t\t.required(\"Seriously?\")\n\t\t.min(8, \"Password is too short - should be 8 chars minimum.\")\n});\n","export default __webpack_public_path__ + \"static/media/icon-error.b72f792e.svg\";","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { useFormik } from \"formik\";\nimport { validationSchema } from \"./validation/validate\";\nimport ErrorIcon from \"../images/icon-error.svg\";\n\nconst StyledForm = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tbackground-color: white;\n\tborder-radius: var(--radius);\n\tpadding-bottom: 20px;\n\tgap: 10px;\n\t\n\tform {\n\t\t\n\t\tinput {\n\t\t\twidth: 90%;\n\t\t\tborder: 1px solid rgb(62, 60, 73, 0.2);\n\t\t\tfont-size: 0.9rem;\n\t\t\tpadding: 0 10px;\n\t\t\tborder-radius: var(--radius);\n\t\t\tmargin-top: 15px;\n\t\t\tfont-weight: 600;\n\t\t\tcolor: var(--dark-blue);\n\t\t\toutline: none;\n            height: 50px;\n\t\t\tcaret-color: var(--blue);\n\t\t\t\n            ::placeholder{\n                color: rgb(62, 60, 73, 0.5);\n            }\n\t\t\t:focus {\n\t\t\t\tborder: 1px solid var(--blue);\n\t\t\t}\n\t\t\ttransition: background-position .3s ease;\n\t\t}\n\n\t\tbutton {\n\t\t\tbackground-color: var(--green);\n\t\t\tcolor: white;\n\t\t\ttext-transform: uppercase;\n\t\t\tpadding: 20px 50px;\n\t\t\tborder-radius: var(--radius);\n\t\t\tfont-size: 0.7rem;\n\t\t\tletter-spacing: 1.6px;\n\t\t\tmargin-top: 15px;\n\t\t\tcursor: pointer;\n\t\t\toutline: none;\n\n\t\t\t:hover,\n\t\t\t:focus {\n\t\t\t\tbackground-color: rgb(5 158 92);\n\t\t\t}\n\t\t\ttransition: background-color .5s ease;\n\t\t}\n\t\t.error {\n\t\t\tcolor: var(--red);\n\t\t\tfont-size: 0.7rem;\n\t\t\ttext-align: right;\n\t\t\twidth: 90%;\n\t\t\ttransition: visibility 1s ease;\n\t\t}\n\t}\n\tsmall {\n\t\twidth: 80%;\n\t\tcolor: var(--grayish-blue);\n\t\tfont-size: 0.6rem;\n\t\tmargin: 0 auto;\n\t\tspan {\n\t\t\tcolor: var(--red);\n\t\t\tfont-weight: 600;\n\t\t}\n\t}\n`;\n\nconst SignupForm: FC = () => {\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tfirstName: \"\",\n\t\t\tlastName: \"\",\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t},\n\t\tvalidationSchema,\n\t\tonSubmit: (values) => {\n\t\t\talert(JSON.stringify(values, null, 2));\n\t\t},\n\t});\n\n    const inputStyle = (param:string | false | undefined) => param\n    ? {\n            backgroundImage: ` url(${ErrorIcon}) `,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \"right 5% bottom 45%\",\n            right: \"0\",\n            border: \"1px solid var(--red)\",\n      }\n    : {}\n\n\treturn (\n\t\t<StyledForm>\n\t\t\t<form action=\"\" onSubmit={formik.handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\tvalue={formik.values.firstName}\n                    style={inputStyle(formik.touched.firstName && formik.errors.firstName)}\n\t\t\t\t/>\n\t\t\t\t{formik.touched.firstName && formik.errors.firstName ? (\n\t\t\t\t\t<div className=\"error\">{formik.errors.firstName}</div>\n\t\t\t\t) : null}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\tvalue={formik.values.lastName}\n\t\t\t\t\tstyle={inputStyle(formik.touched.lastName && formik.errors.lastName)}\n\t\t\t\t/>\n\t\t\t\t{formik.touched.lastName && formik.errors.lastName ? (\n\t\t\t\t\t<div className=\"error\">{formik.errors.lastName}</div>\n\t\t\t\t) : null}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tplaceholder=\"Email Address\"\n\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\tvalue={formik.values.email}\n                    style={inputStyle(formik.touched.email && formik.errors.email)}\n\t\t\t\t/>\n\t\t\t\t{formik.touched.email && formik.errors.email ? (\n\t\t\t\t\t<div className=\"error\">{formik.errors.email}</div>\n\t\t\t\t) : null}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\tonBlur={formik.handleBlur}\n\t\t\t\t\tvalue={formik.values.password}\n                    style={inputStyle(formik.touched.password && formik.errors.password)}\n\t\t\t\t/>\n\t\t\t\t{formik.touched.password && formik.errors.password ? (\n\t\t\t\t\t<div className=\"error\">{formik.errors.password}</div>\n\t\t\t\t) : null}\n\t\t\t\t<button type=\"submit\">Claim your free trial </button>\n\t\t\t</form>\n\t\t\t<small>\n\t\t\t\tBy clicking the button, you are agreeing to our{\" \"}\n\t\t\t\t<span>Terms and Services</span>\n\t\t\t</small>\n\t\t</StyledForm>\n\t);\n};\n\nexport default SignupForm;\n","import { FC } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport SignupForm from \"./components/SignupForm\";\n\nconst StyledApp = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 300px;\n\theight: 100vh;\n\tcolor: white;\n\ttext-align: center;\n\tgap: 20px;\n`;\nconst StyledTexts = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tgap: 20px;\n\n\tp {\n\t\tfont-size: 0.9rem;\n\t\tline-height: 24px;\n\t}\n`;\nconst StyledTryButton = styled.button`\n\tcursor: pointer;\n\tpadding: 20px 60px;\n\tborder-radius: var(--radius);\n\tcolor: var(--grayish-blue);\n\twidth: 300px;\n\tbackground-color: var(--blue);\n\tspan {\n\t\tfont-weight: 600;\n\t\tcolor: white;\n\t}\n\t:hover,\n\t:focus {\n\t\tbackground-color: #3d3670;\n\t}\n  transition: background-color .5s ease;\n`;\n\nconst App: FC = () => {\n\treturn (\n\t\t<StyledApp>\n\t\t\t<StyledTexts>\n\t\t\t\t<h2>Learn to code by watching others</h2>\n\t\t\t\t<p>\n\t\t\t\t\tSee how experienced developers solve problems in real-time. Watching\n\t\t\t\t\tscripted tutorials is great, but understanding how developers think is\n\t\t\t\t\tinvaluable.\n\t\t\t\t</p>\n\t\t\t</StyledTexts>\n\t\t\t<StyledTryButton>\n\t\t\t\t<span>Try it free 7 days</span> then <br />\n\t\t\t\t$20/mo. thereafter\n\t\t\t</StyledTryButton>\n\t\t\t<SignupForm />\n\t\t</StyledApp>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}